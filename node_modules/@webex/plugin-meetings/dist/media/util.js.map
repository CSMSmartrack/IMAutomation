{"version":3,"sources":["util.js"],"names":["MediaUtil","createPeerConnection","window","RTCPeerConnection","bowser","firefox","RTC_CONFIGURATION_FIREFOX","RTC_CONFIGURATION","createMediaStream","tracks","LoggerProxy","logger","error","MediaStream"],"mappings":";;;;;;AACA;;;;AAEA;;AAIA;;;;;;AAEA,IAAMA,YAAY,EAAlB,C,CATA;;;AAWAA,UAAUC,oBAAV,GAAiC;AAAA,SAAM,IAAIC,OAAOC,iBAAX,CACrCC,iBAAOC,OAAP,GAAiBC,oCAAjB,GAA6CC,4BADR,CAAN;AAAA,CAAjC;;AAIAP,UAAUQ,iBAAV,GAA8B,UAACC,MAAD,EAAY;AACxC,MAAI,CAACA,MAAL,EAAa;AACXC,0BAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,qBAAzB;AACD;;AAED,SAAO,IAAIC,WAAJ,CAAgBJ,MAAhB,CAAP;AACD,CAND;;kBAQeT,S","file":"util.js","sourcesContent":["/* globals window, MediaStream */\nimport bowser from 'bowser';\n\nimport {\n  RTC_CONFIGURATION,\n  RTC_CONFIGURATION_FIREFOX\n} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\n\nconst MediaUtil = {};\n\nMediaUtil.createPeerConnection = () => new window.RTCPeerConnection(\n  bowser.firefox ? RTC_CONFIGURATION_FIREFOX : RTC_CONFIGURATION\n);\n\nMediaUtil.createMediaStream = (tracks) => {\n  if (!tracks) {\n    LoggerProxy.logger.error('Tracks don\\'t exist');\n  }\n\n  return new MediaStream(tracks);\n};\n\nexport default MediaUtil;\n"]}